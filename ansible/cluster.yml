---

- hosts: localhost
  gather_facts: false
  roles:
    - role: admission_token
      tags:
        - token
  tasks:
    - debug:
        var: admission_token
      tags:
        - token

- hosts: master
  become: true
  roles:
    - role: kubeadm_install
      tags:
        - repo
        - master
        - nodes          
  tasks:
    # Implements Step 2 of http://kubernetes.io/docs/getting-started-guides/kubeadm/
    - name: Initialize master
      command: kubeadm init --token {{ hostvars.localhost.admission_token }} --kubernetes-version v1.9.0 --skip-preflight-checks
      args:
        creates: /etc/kubernetes/pki
      register: master_init
      ignore_errors: true
      tags:
        - master
        - init
    - debug:
        var: master_init.stdout_lines
    - set_fact: join_statement={{ master_init.stdout_lines[-1].strip() }}
    - debug: 
        var: "{{ hostvars }}"

- hosts: "{{ hostvars.localhost.groups.master | join(',') }}"
  become: true
  tasks:
    - name: set kubectl environment
      command: "{{ item }}"
      with_items:
        - cp /etc/kubernetes/admin.conf $HOME/
        - chmod a+rw $HOME/admin.conf
      register: kubectl_env
      tags:
        - master

    - name: backup certs to local
      fetch:
        src: /root/admin.conf
        dest: /root/
        flat: yes
        mode: 0666
      tags: 
        - master

    - debug:
        var: kubectl_env.results

- hosts: devbox
  become: true
  tasks:
    - name: copy certs to devbox
      copy:
        src: /root/admin.conf
        dest: /root/
        mode: 0666
      register: certs_dup
      tags:
        - devbox
    - debug:
       var: certs_dup.stdout_lines

- hosts: "{{ hostvars.localhost.groups.nodes | join(',') }}"
  become: true
  roles:
    - role: kubeadm_install
      tags:
        - repo
        - master
        - nodes    
  tasks:
    # Implements Step 3 of http://kubernetes.io/docs/getting-started-guides/kubeadm/
    - set_fact:
        master_ip_address: 10.10.20.1
      when: master_ip_address_configured is not defined

    - name: Join nodes to cluster
      command: "{{ hostvars['10.10.20.1']['join_statement'] }}"
      args:
        creates: /etc/kubernetes/kubelet.conf
      register: node_join
      ignore_errors: false 
      tags:
        - nodes
        - join

    - debug:
        var: node_join.stdout_lines

    - name: reload kubelet service
      command: service kubelet restart 
      register: node_kubelet
      ignore_errors: true
      tags:
        - nodes
        - master


- hosts: "{{ hostvars.localhost.groups.master | join(',') }}"
  become: true
  tasks:
    # Implements Step 4 of http://kubernetes.io/docs/getting-started-guides/kubeadm/
    - name: Install Weave
      command: "{{ item }}"
      args: 
      with_items:
        - kubectl apply -f https://git.io/weave-kube-1.6
      register: pod_network
      ignore_errors: True
      tags:
        - master

    - debug:
        var: pod_network.results

    - wait_for:
        port: 6784
        delay: 10

    - name: start kubectl proxy
      command: kubectl proxy --kubeconfig /etc/kubernetes/admin.conf --address=0.0.0.0 --port=8001 --accept-hosts=^*$ &
      async: 2592000
      poll: 0
      register: kube_proxy
      tags:
        - master

    - name: Wait for Kube-DNS pod running
      shell: "kubectl --kubeconfig /etc/kubernetes/admin.conf get pods --all-namespaces | grep kube-dns"
      register: result
      until: result.stdout.find("Running") != -1
      retries: 30
      delay: 10   
      tags:
        - master

    # setup Kubernetes UI (Dashboard)
    - name: setup Kubernetes Dashboard
      command: "{{ item }}"
      with_items:
        #- curl -L -O  https://raw.githubusercontent.com/iceworld/ansible/master/kube-dashboard.yaml
        #- kubectl delete deployment/kube-dns -n kube-system
        - kubectl --kubeconfig /etc/kubernetes/admin.conf create -f ./kube-dashboard.yaml
      register: kube_dashboard
      ignore_errors: True
      tags:
        - master
    - debug:
        var: kube_dashboard.results

- hosts: "{{ hostvars.localhost.groups.master | join(',') }}"
  become: true
  tasks:
    - pause:
        seconds: 60
    - name: probe dashboard status
      shell: kubectl --kubeconfig /etc/kubernetes/admin.conf get pod -n kube-system | grep dashboard | awk '{print $3}'
      register: podresult
      ignore_errors: True
    - debug:
        var: podresult.stdout

- hosts: staticroutes
  become: true
  tasks:
    - name: add container routes to hosts 
      command: ip route add 10.32.0.0/12 via 10.10.20.1 
      register: routeadd
      ignore_errors: True
